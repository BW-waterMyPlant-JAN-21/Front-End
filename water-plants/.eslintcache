[{"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\index.js":"1","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\App.js":"2","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\context\\globalContext.js":"3","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Signup.js":"4","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Home.js":"5","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Login.js":"6","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Dashboard.js":"7","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Navigation.js":"8","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\PlantDetails.js":"9","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Plant.js":"10","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\utils\\privateRoute.js":"11"},{"size":359,"mtime":1612312946729,"results":"12","hashOfConfig":"13"},{"size":3511,"mtime":1612318104164,"results":"14","hashOfConfig":"13"},{"size":509,"mtime":1612315785616,"results":"15","hashOfConfig":"13"},{"size":3803,"mtime":1612316107682,"results":"16","hashOfConfig":"13"},{"size":981,"mtime":1612312225693,"results":"17","hashOfConfig":"13"},{"size":1537,"mtime":1612318488704,"results":"18","hashOfConfig":"13"},{"size":3604,"mtime":1612317708461,"results":"19","hashOfConfig":"13"},{"size":1128,"mtime":1612312225694,"results":"20","hashOfConfig":"13"},{"size":3052,"mtime":1612312225695,"results":"21","hashOfConfig":"13"},{"size":5182,"mtime":1612312225694,"results":"22","hashOfConfig":"13"},{"size":468,"mtime":1612317496835,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t9a726",{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\index.js",[],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\App.js",["49","50","51","52","53","54","55"],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\context\\globalContext.js",["56"],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Signup.js",["57","58","59"],"import axios from 'axios';\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport * as yup from 'yup';\r\nimport {GlobalContext} from '../context/globalContext'\r\n\r\nconst lowercaseRegex = /(?=.*[a-z])/;\r\nconst uppercaseRegex = /(?=.*[A-Z])/;\r\nconst numericRegex = /(?=.*[0-9])/;\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup.string().required('User Name is Required!').min(2, \"Names must be atleast 2 Characters Long\"),\r\n    password: yup.string().required('Password is Required!')\r\n    .matches(lowercaseRegex, 'one lowercase character required')\r\n    .matches(uppercaseRegex, 'one uppercase character required')\r\n    .matches(numericRegex, 'one number required')\r\n    .min(8, 'Minimum 8 characters required!'),\r\n    phoneNumber: yup.number()\r\n    .required('Phone Number is Required'),\r\n    // confirmPassword: yup.string()\r\n    // .required('Please Confirm Password before submitting the form')\r\n})\r\n\r\nconst Signup = (props) => {\r\n\r\n    let {disabled, setDisabled} = useContext(GlobalContext)\r\n\r\n    const[form,updateValue] = useState({\r\n        username: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        \r\n    })\r\n   \r\n\r\n    const [errors, setErrors] = useState({\r\n        username: ' ',\r\n        phoneNumber: ' ',\r\n        password: ' ',\r\n        // confirmPassword: ' '\r\n    })\r\n\r\n\r\n    const setFormErrors = (name, value) => {\r\n        yup.reach(schema, name).validate(value)\r\n        .then(() => setErrors({...errors, [name]: ''}))\r\n        .catch((err) => {\r\n            setErrors({...errors, [name]: err.errors[0]})\r\n        })\r\n    }\r\n\r\n    const changeFunction = (e) => {\r\n        // const{name, value} = evt.target;\r\n        // console.log(name, value);\r\n        // updateValue(name, value);\r\n        // setFormErrors(name, value);\r\n        updateValue({...form,[e.target.name]:e.target.value})\r\n        console.log('form data in change',form)\r\n    }\r\n\r\n    useEffect(() => {\r\n        schema.isValid(form).then(valid =>setDisabled(!valid))\r\n    }, [form])\r\n\r\n    const submitFunction =(e)=>{\r\n        e.preventDefault();\r\n\r\n        console.log('form',form)\r\n        axios\r\n        .post('https://waterplant-test.herokuapp.com/register',{username:form.username,password: form.password,phoneNumber: form.phoneNumber})\r\n        .then((res)=>{\r\n        console.log(res.data)})\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-signup\">\r\n            <form onSubmit={submitFunction}>\r\n                <label> User Name:\r\n                    <input onChange={changeFunction} value={form.username} name=\"username\" type=\"text\" placeholder=\"Enter User Name\"/>\r\n                </label>\r\n                <p style={{color: 'red'}}>{errors.username}</p>\r\n                <label> Cell Number:\r\n                    <input onChange={changeFunction} value={form.phoneNumber} name=\"phoneNumber\" type=\"string\" placeholder=\"Enter Phone Number\"/>\r\n                </label>\r\n                <p style={{color: 'red'}}>{errors.phoneNumber}</p>\r\n                <label> Password:\r\n                    <input onChange={changeFunction} value={form.password} name=\"password\" type=\"text\" placeholder=\"Enter Password\"/>\r\n                </label>\r\n                <p style={{color: 'red'}}>{errors.password}</p>\r\n                {/* <label> Confirm Password:\r\n                    <input onChange={changeFunction} value={form.confirmPassword} name=\"confirmPassword\" type=\"text\" placeholder=\"Enter Pasword Again to Confirm\"/>\r\n                </label> */}\r\n                {/* <p style={{color: 'red'}}>{errors.confirmPassword}</p> */}\r\n                <button>sign up </button>\r\n                {/* disabled = {disabled}>{disabled ? 'Fill The Form' : 'Submit Form'} */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;",["60","61"],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Home.js",[],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Login.js",["62","63","64"],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Dashboard.js",["65","66","67","68","69","70"],"import React, {useState} from \"react\";\r\nimport Plant from \"./Plant.js\";\r\nimport nature from \"../Assets/nature.jpg\";\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const {createPlantFunction, deleteFunction, plantData, addThirstyPlantFunction, listResetPlants, adjustResetListFunction, updatePlantsFunction} = props;\r\n\r\n  const startPlantDetails = {\r\n    nickname: \" \",\r\n    species: \" \",\r\n    plantImage: nature,\r\n    days: \"00\",\r\n    today: \"\",\r\n  };\r\n\r\n  const [plantDetails, setPlantDetails] = useState(startPlantDetails);\r\n\r\n  const enterPlantDetails = (evt) => {\r\n    const {name, value} = evt.target;\r\n    console.log(name, value);\r\n    setPlantDetails({...plantDetails, [name] : value});\r\n  }\r\n\r\n  const createPlantCards = (evt) => {\r\n    evt.preventDefault();\r\n    createPlantFunction(plantDetails);\r\n    setPlantDetails(startPlantDetails);\r\n    adjustResetListFunction();\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboardForm\">\r\n      <h2>Add Your Plants!</h2>\r\n      {<div className=\"wateringNotification\">\r\n          <h5>Important Notifications!</h5>\r\n          {/* {listResetPlants.map((eachPlant) => {\r\n            return <p>{`${eachPlant.nickname} plant needs water`}</p>\r\n          })} */}\r\n        </div>\r\n      }\r\n      <form onSubmit={createPlantCards} className='plantForm'>\r\n        <label>\r\n          nickname:\r\n          <input\r\n            onChange={enterPlantDetails}\r\n            type='text'\r\n            value={plantDetails.nickname}\r\n            name='nickname'\r\n            placeholder='Enter nickname'\r\n          />\r\n        </label>\r\n        <label>\r\n          species:\r\n          <input\r\n            onChange={enterPlantDetails}\r\n            type='text'\r\n            value={plantDetails.species}\r\n            name='species'\r\n            placeholder='Enter species'\r\n          />\r\n        </label>\r\n        <div className=\"wateringSchedule\">\r\n          <p>H2O Frequency Timer:</p>\r\n          <label>\r\n            Watering Frequency (Days)\r\n            <select onChange = {enterPlantDetails} value = {plantDetails.days} name=\"days\">\r\n              <option>--Select Days--</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"7\">7</option>\r\n              <option value=\"14\">14</option>\r\n              <option value=\"5\">5</option>\r\n            </select>\r\n          </label>\r\n          <label>Date when the plant was last watered:\r\n            <input value = {plantDetails.today} onChange={enterPlantDetails} name=\"today\" type=\"date\"/>\r\n          </label>\r\n        </div>\r\n        <label>Select an Image\r\n          <div>\r\n            <input type=\"file\" onChange ={enterPlantDetails} name=\"plantImage\"/>\r\n          </div>\r\n        </label>\r\n        <button>Add The Plant</button>\r\n      </form>\r\n      <div className='plantContainer'>\r\n        {/* {plantData.map((plant) => {\r\n          return (\r\n            <Plant\r\n              key = {plant.id}\r\n              num = {plant.id}\r\n              nickname={plant.nickname}\r\n              species={plant.species}\r\n              data={plantData}\r\n              days = {plant.days}\r\n              image = {plant.plantImage}\r\n              today = {plant.today}\r\n              triggerDelete = {deleteFunction}\r\n              addThirstyPlantFunction = {addThirstyPlantFunction}\r\n              listResetPlants = {listResetPlants}\r\n              updatePlantsFunction = {updatePlantsFunction}\r\n              adjustResetListFunction = {adjustResetListFunction}\r\n            />\r\n          );\r\n        })} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Navigation.js",[],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\PlantDetails.js",[],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\Components\\Plant.js",[],"C:\\Users\\user\\Desktop\\lambda\\unit4\\bw-waterPlant\\Front-End\\water-plants\\src\\utils\\privateRoute.js",[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"75","line":14,"column":9,"nodeType":"73","messageId":"74","endLine":14,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":27,"column":9,"nodeType":"73","messageId":"74","endLine":27,"endColumn":25},{"ruleId":"71","severity":1,"message":"77","line":35,"column":9,"nodeType":"73","messageId":"74","endLine":35,"endColumn":25},{"ruleId":"71","severity":1,"message":"78","line":45,"column":9,"nodeType":"73","messageId":"74","endLine":45,"endColumn":22},{"ruleId":"71","severity":1,"message":"79","line":51,"column":9,"nodeType":"73","messageId":"74","endLine":51,"endColumn":24},{"ruleId":"71","severity":1,"message":"80","line":86,"column":9,"nodeType":"73","messageId":"74","endLine":86,"endColumn":14},{"ruleId":"71","severity":1,"message":"81","line":1,"column":31,"nodeType":"73","messageId":"74","endLine":1,"endColumn":41},{"ruleId":"71","severity":1,"message":"82","line":25,"column":10,"nodeType":"73","messageId":"74","endLine":25,"endColumn":18},{"ruleId":"71","severity":1,"message":"83","line":43,"column":11,"nodeType":"73","messageId":"74","endLine":43,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":62,"column":8,"nodeType":"86","endLine":62,"endColumn":14,"suggestions":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"71","severity":1,"message":"81","line":1,"column":25,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"92","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":22},{"ruleId":"71","severity":1,"message":"93","line":16,"column":11,"nodeType":"73","messageId":"74","endLine":16,"endColumn":18},{"ruleId":"71","severity":1,"message":"94","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"95","line":7,"column":31,"nodeType":"73","messageId":"74","endLine":7,"endColumn":45},{"ruleId":"71","severity":1,"message":"96","line":7,"column":47,"nodeType":"73","messageId":"74","endLine":7,"endColumn":56},{"ruleId":"71","severity":1,"message":"97","line":7,"column":58,"nodeType":"73","messageId":"74","endLine":7,"endColumn":81},{"ruleId":"71","severity":1,"message":"98","line":7,"column":83,"nodeType":"73","messageId":"74","endLine":7,"endColumn":98},{"ruleId":"71","severity":1,"message":"99","line":7,"column":125,"nodeType":"73","messageId":"74","endLine":7,"endColumn":145},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'initialFormValues' is assigned a value but never used.","'addThirstyPlants' is assigned a value but never used.","'createPlantCards' is assigned a value but never used.","'triggerDelete' is assigned a value but never used.","'adjustResetList' is assigned a value but never used.","'admin' is assigned a value but never used.","'useContext' is defined but never used.","'disabled' is assigned a value but never used.","'setFormErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDisabled'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'GlobalContext' is defined but never used.","'history' is assigned a value but never used.","'Plant' is defined but never used.","'deleteFunction' is assigned a value but never used.","'plantData' is assigned a value but never used.","'addThirstyPlantFunction' is assigned a value but never used.","'listResetPlants' is assigned a value but never used.","'updatePlantsFunction' is assigned a value but never used.",{"desc":"103","fix":"104"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [form, setDisabled]",{"range":"105","text":"106"},[1999,2005],"[form, setDisabled]"]